# -*- coding: utf-8 -*-
"""Exploratory_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ceIGcGlQnIhUNcsaJKrWY-1ZOm47zZzx

# **Análise Exploratória - Pandas**
"""

# Importando as bilbiotecas
import pandas as pd
import matplotlib.pyplot as plt
plt.style.use("seaborn")

# Criando Dataframe
df = pd.read_excel("./datasets/AdventureWorks.xlsx")

df.head()

df.shape

df.dtypes

# Qual a Receita total?
df['Valor Venda'].sum()

# Qual o custo total?
df['Custo'] = df['Custo Unitário'].mul(df['Quantidade']) # Cria coluna Custo

df.head(1)

# Qual o custo total?
round(df["Custo"].sum(), 2)

# Agora que temos a receita, custo e o total, podemos achar o Lucro total
# Vamos criar uma coluna de Lucro que será a Receita - Custo
df['Lucro'] = df['Valor Venda'] - df['Custo']

df.head(1)

# Lucro total
round(df["Lucro"].sum(), 2)

# Criando uma coluna com total de dias para enviar o produto
df['Tempo_Envio'] = df['Data Envio'] - df['Data Venda']

df.head(1)

"""<br><br>

### Agora, queremos saber a média do tempo de envio para cada Marca, e para isso precisamos transformar a coluna Tempo_Envio em numérica.
"""

# Extraindo apenas os dias
df['Tempo_Envio'] = (df['Data Envio'] - df['Data Venda']).dt.days

df.head(1)

# Verificando o tipo da coluna Tempo_Envio
df['Tempo_Envio'].dtype

# Média do tempo de envio por Marca
df.groupby("Marca")["Tempo_Envio"].mean()

"""<br><br>


### Valores Ausentes
"""

# Verifcando se temos dados faltantes
df.isnull().sum()

"""<br><br>

### E, se quisermos saber o Lucro por Ano e por Marca?
"""

# Vamos agrupar por ano e marca
df.groupby([df["Data Venda"].dt.year, "Marca"])["Lucro"].sum()

pd.options.display.float_format = '{:20,.2f}'.format

# Resetando o index
lucro_ano = df.groupby([df["Data Venda"].dt.year, "Marca"])["Lucro"].sum().reset_index()
lucro_ano

# Qual o total de produtos vendidos?
df.groupby("Produto")["Quantidade"].sum().sort_values(ascending=False)

# Gráfico Total de produtos vendidos
df.groupby("Produto")["Quantidade"].sum().sort_values(ascending=True).plot.barh(title="Total Produtos Vendidos")
plt.xlabel("Total")
plt.ylabel("Produto");

# Gráfico Lucro por ano
df.groupby(df['Data Venda'].dt.year)['Lucro'].sum().plot.bar(title="Lucro x Ano")
plt.xlabel("Ano")
plt.ylabel("Receita");

df.groupby(df["Data Venda"].dt.year)["Lucro"].sum()

# Selecionando apenas as vendas de 2009
df_2009 = df[df["Data Venda"].dt.year == 2009]

df_2009.head()

# Gráfico Lucro por mês, ano 2009
df_2009.groupby(df_2009["Data Venda"].dt.month)["Lucro"].sum().plot(title="Lucro x Mês")
plt.xlabel("Mês")
plt.ylabel("Lucro");

# Gráfico Lucro por marca, ano 2009
df_2009.groupby("Marca")["Lucro"].sum().plot.bar(title="Lucro x Marca")
plt.xlabel("Marca")
plt.ylabel("Lucro");
plt.xticks(rotation="horizontal");

df_2009.groupby("Marca")["Lucro"].sum().plot.pie(explode=[0.02,0.02,0.02],
                                                 autopct=lambda p: f'{p:.2f}%');

# Lucro por Classe
df_2009.groupby("Classe")["Lucro"].sum().plot.bar(title="Lucro x Classe")
plt.xlabel("Classe")
plt.ylabel("Lucro");
plt.xticks(rotation="horizontal");

df_2009.groupby("Classe")["Lucro"].sum().plot.pie(explode=[0.02,0.02],
                                                 autopct=lambda p: f'{p:.2f}%');

df_2009.groupby("Classe")["Lucro"].sum()

df["Tempo_Envio"].describe()

# Gráfico de Boxplot
plt.boxplot(df["Tempo_Envio"]);

# Histograma
plt.hist(df["Tempo_Envio"]);

# Tempo mínimo de envio
df["Tempo_Envio"].min()

# Tempo máximo de envio
df["Tempo_Envio"].max()

# Identificando o Outlier
df[df["Tempo_Envio"] == 20]

# Salva o dataframe em um arquivo csv
df.to_csv("df_vendas_novo.csv", index=False)